#!/usr/bin/perl -w -Ilib/ -I../lib/

=head1 NAME

dump-zone - Dump all records beneath our domain.

=cut

=head1 ABOUT

This script will dump all the records beneath our zone - i.e. all our users.

It is useful for diagnostics and for tracking growth, but perhaps little else.

=cut

=head1 Questions / Bug Reports

The code is developed and hosted on gitub in the following location:

=over 8

=item https://github.com/skx/dhcp.io

=back

Please raise any issues in the tracker there.

=cut

=head1 LICENSE

Copyright (c) 2014 by Steve Kemp.  All rights reserved.

This module is free software; you can redistribute it and/or modify it
under the terms of either:

a) the GNU General Public License as published by the Free Software
Foundation; either version 2, or (at your option) any later version,
or

b) the Perl "Artistic License".

=cut

=head1 AUTHOR

 Steve
 --
 http://www.steve.org.uk/

=cut


use strict;
use warnings;

use DHCP::Records;
use Getopt::Long;

#
#  Parse options: -4 / -6 / all
#
my %CONFIG;
$CONFIG{ 'all' } = 1;

exit
  if (
       !Getopt::Long::GetOptions( "4",     \$CONFIG{ 'ipv4' },
                                  "6",     \$CONFIG{ 'ipv6' },
                                  "--all", \$CONFIG{ 'all' } ) );

my $type = "all";
$type = "A"    if ( $CONFIG{ 'ipv4' } );
$type = "AAAA" if ( $CONFIG{ 'ipv6' } );



#
#  Get the records.
#
my $tmp = DHCP::Records->new();
my $obj = $tmp->getRecords();

#
#  The results and the count.
#
my %obj = %$obj;
my $c   = 0;

#
#  The record-types to dump.  All by default.
#
my @types = ( "A", "AAAA" );

#
#  Might be limiting.
#
@types = ("A")    if ( $type eq "A" );
@types = ("AAAA") if ( $type eq "AAAA" );


#
#  Get the types.
#
foreach my $key (@types)
{
    my $hash = $obj{ $key };

    foreach my $name ( sort keys %$hash )
    {
        next if ( $name =~ /^(dhcp|www)$/ );
        print sprintf( "%15s - %s", $name, $obj->{ $key }{ $name } ) . "\n";
        $c += 1;
    }
}

print "; $c record";
print "s" unless ( $c == 1 );
print ".\n";
